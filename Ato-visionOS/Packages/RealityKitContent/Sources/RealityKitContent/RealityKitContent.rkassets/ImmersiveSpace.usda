#usda 1.0
(
    defaultPrim = "im"
)

def "im" (
    active = true
    customData = {
        float3 rotationEulerHint = (-1.5707964, 0, 0)
    }
    references = @im.usdz@
)
{
    quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (0, 2.2368586, -5.587935e-7)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Material "Material"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </im/Material/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.85540956, 0.85540956, 0.85540956) (
                colorSpace = "srgb_displayp3"
            )
            token outputs:surface
        }
    }

    over "Cube_003"
    {
        over "Cube_002" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </im/Material> (
                bindMaterialAs = "weakerThanDescendants"
            )
        }
    }

    over "Cube_002"
    {
        over "Cube_001" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </im/Material> (
                bindMaterialAs = "weakerThanDescendants"
            )
        }
    }

    over "Cube_004"
    {
        over "Cube_003" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </im/Material> (
                bindMaterialAs = "weakerThanDescendants"
            )
        }
    }

    over "stylized_medieval_castle_room_001"
    {
        over "Meshes_002"
        {
            over "Sketchfab_model_002"
            {
                over "_08fccd2c593457d8c1814462df8becf_fbx_001"
                {
                    over "RootNode_002"
                    {
                        over "Cylinder_001"
                        {
                            over "Cylinder_stuff_0_002"
                            {
                                over "Cylinder_stuff_0_002" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </im/_materials/stuff> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

def Xform "ParticleEmitter"
{
    quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
    float3 xformOp:scale = (0.09999998, 0.09999998, 0.09999998)
    float3 xformOp:translate = (-16.070724, 2.2368317, -5.587935e-7)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def RealityKitComponent "VFXEmitter"
    {
        token info:id = "RealityKit.VFXEmitter"

        def RealityKitStruct "currentState"
        {
            token birthDirection = "Normal"
            token birthLocation = "Surface"
            int64 burstCount = 10
            int64 burstCountVariation = 5
            float3 emissionDirection = (0, 1, 0)
            double emissionDuration = 0.05
            double emissionDurationVariation = 0
            token emitterShape = "Cylinder"
            double idleDuration = 3
            double idleDurationVariation = 0
            bool isLocal = 0
            bool isSpawningEnabled = 0
            bool loops = 1
            float particleSpeed = 0.5
            float particleSpeedVariation = 0.1
            float3 shapeSize = (0.05, 0.01, 0.05)
            bool spawnInheritParentColor = 0
            token spawnOccasion = "OnDeath"
            float spawnSpreadFactor = 0
            float spawnSpreadFactorVariation = 0
            float spawnVelocityFactor = 1
            double warmupDuration = 0

            def RealityKitStruct "mainEmitter"
            {
                float3 acceleration = (0, -0.05, 0)
                token animationRepeatMode = "PlayOnce"
                token billboardMode = "Billboard"
                float birthRate = 800
                float birthRateVariation = 1000
                token blendMode = "Alpha"
                float colorEvolutionPower = 1
                int64 columnCount = 4
                float dampingFactor = 8
                float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                float frameRate = 0
                float frameRateVariation = 0
                int64 initialFrame = 2
                int64 initialFrameVariation = 6
                bool isAnimated = 1
                bool isLightingEnabled = 0
                float noiseAnimationSpeed = 0
                float noiseScale = 1
                float noiseStrength = 0.1
                token opacityOverLife = "EaseFadeOut"
                float particleAngle = 0
                float particleAngleVariation = 0
                float particleAngularVelocity = 0
                float particleAngularVelocityVariation = 1
                asset particleImage = @ParticleEmitterPresetTextures/dustsheet.exr@
                double particleLifeSpan = 20
                double particleLifeSpanVariation = 1
                float particleMass = 1
                float particleMassVariation = 0.8
                float particleSize = 0.01
                float particleSizeVariation = 0
                float3 radialGravityCenter = (0, -0.1, 0)
                float radialGravityStrength = -0.1
                int64 rowCount = 4
                float sizeMultiplierAtEndOfLifespan = 8
                float sizeMultiplierAtEndOfLifespanPower = 0.2
                token sortOrder = "DecreasingDepth"
                float spreadingAngle = 0
                float4 startColorA = (1, 1, 1, 0.26)
                float4 startColorB = (1, 1, 1, 0.07)
                float stretchFactor = 0
                bool useEndColor = 0
                bool useEndColorRange = 0
                bool useStartColorRange = 1
                float3 vortexDirection = (0, 1, 0)
                float vortexStrength = 0
            }

            def RealityKitStruct "spawnedEmitter"
            {
            }
        }
    }
}

def Xform "DirectionalLight"
{
    quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (-0.80038214, 78.07728, -3.2856865)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def RealityKitComponent "DirectionalLight"
    {
        float3 color = (1, 0.87788624, 0.70738816)
        token info:id = "RealityKit.DirectionalLight"
        float intensity = 7145.708

        def RealityKitStruct "Shadow"
        {
            bool isEnabled = 1
        }
    }
}

def Xform "SpotLight" (
    customData = {
        float3 rotationEulerHint = (-0.5235988, 0.34906587, -1.5857486e-8)
    }
)
{
    quatf xformOp:orient = (0.9512512, -0.254887, 0.16773126, 0.044943452)
    float3 xformOp:scale = (0.9999999, 0.9999999, 0.9999999)
    float3 xformOp:translate = (48.485428, 58.83911, 50.973175)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def RealityKitComponent "SpotLight"
    {
        float3 color = (1, 0.55283874, 0.3330219)
        token info:id = "RealityKit.SpotLight"
        float intensity = 8740.94

        def RealityKitStruct "Shadow"
        {
            bool isEnabled = 1
        }
    }
}

